services:
  minio:
    image: minio/minio
    ports:
      - "9000:9000"  # MinIO API port
      - "9001:9001"  # MinIO Console port
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    volumes:
      - minio-data:/data
    command: server /data --console-address ":9001"
    networks:
      - dms-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  createbuckets:
    image: minio/mc
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      sleep 10;
      /usr/bin/mc config host add myminio http://minio:9000 minioadmin minioadmin;
      /usr/bin/mc mb myminio/dms-documents;
      /usr/bin/mc anonymous set download myminio/dms-documents;
      /usr/bin/mc policy set download myminio/dms-documents;     # Explicit download policy
      exit 0;
      "
    networks:
      - dms-network
    

  storage-service:
    image: eclipse-temurin:21-jre-jammy
    ports:
      - "8082:8082"
    volumes:
      - ../storage-service/target/storage-service-0.0.1-SNAPSHOT.jar:/app/app.jar
    environment:
      - AWS_ACCESS_KEY=minioadmin
      - AWS_SECRET_KEY=minioadmin
      - spring.application.name=storage-service
      - aws.s3.endpoint=http://minio:9000
      - aws.s3.region=us-east-1
      - aws.s3.bucket=dms-documents
    command: ["java", "-jar", "/app/app.jar"]
    depends_on:
      - minio
      - createbuckets
    networks:
      - dms-network

networks:
  dms-network:
    driver: bridge

volumes:
  minio-data: